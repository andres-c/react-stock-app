{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/andrescisneros/Desktop/stock-v2 (1)/src/pages/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchStockStart } from '../redux/stock/stock.actions';\nimport { selectCurrentStock } from '../redux/stock/stock.selectors';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport formatDate from '../helper/formatDate';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StyledSelect = _styled.select.withConfig({\n  displayName: \"Main__StyledSelect\",\n  componentId: \"sc-11ahqwe-0\"\n})([\"margin-right:20px;padding:5px 10px;\"]);\n\nconst StyledPicker = _styled.input.withConfig({\n  displayName: \"Main__StyledPicker\",\n  componentId: \"sc-11ahqwe-1\"\n})([\"padding:5px 10px;\"]);\n\nconst Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const stock = useSelector(state => state.stock);\n  const [selectedStock, setSelectedStock] = useState('apple');\n  const [endDate, setEndDate] = useState(new Date());\n  useEffect(() => {\n    dispatch(fetchStockStart(selectedStock));\n  }, [dispatch, selectedStock]);\n  console.log(stock);\n\n  if (stock.errorMessage) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: stock.errorMessage\n    }, void 0, false);\n  }\n\n  if (!stock.stock) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false);\n  }\n\n  const performance = stock.stock.performance.reduce((acc, current) => {\n    const prevAmount = acc.length > 0 ? acc[acc.length - 1][1] : 10000;\n    return [...acc, [new Date(current[0]), prevAmount + prevAmount * current[1] / 100]];\n  }, []).filter(item => item[0] < endDate);\n  const visibleIndex = parseInt(performance.length / 8);\n  const chartData = performance.filter((item, index) => index % visibleIndex === 0);\n  console.log(chartData);\n  const options = {\n    title: {\n      text: stock.companyName\n    },\n    xAxis: {\n      categories: chartData.map(data => data[0].toDateString())\n    },\n    series: [{\n      data: chartData\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StyledSelect, {\n        name: \"Select stock\",\n        defaultValue: \"apple\",\n        onChange: e => setSelectedStock(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"apple\",\n          children: \"Apple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"amazon\",\n          children: \"Amazon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tesla\",\n          children: \"Tesla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledPicker, {\n        onChange: e => {\n          console.log(e.target.value);\n          setEndDate(new Date(e.target.value));\n        },\n        type: \"date\",\n        value: formatDate(endDate || performance[performance.length - 1][0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"o94Fz1FLseIenbqRNMVsoCbyi1o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/andrescisneros/Desktop/stock-v2 (1)/src/pages/Main.js"],"names":["useEffect","useState","useDispatch","useSelector","fetchStockStart","selectCurrentStock","Highcharts","HighchartsReact","formatDate","StyledSelect","styled","select","StyledPicker","input","Main","dispatch","stock","state","selectedStock","setSelectedStock","endDate","setEndDate","Date","console","log","errorMessage","performance","reduce","acc","current","prevAmount","length","filter","item","visibleIndex","parseInt","chartData","index","options","title","text","companyName","xAxis","categories","map","data","toDateString","series","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchStockStart } from '../redux/stock/stock.actions';\nimport { selectCurrentStock } from '../redux/stock/stock.selectors';\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport formatDate from '../helper/formatDate';\nimport styled from 'styled-components/macro';\n\nconst StyledSelect = styled.select`\n  margin-right: 20px;\n  padding: 5px 10px;\n`;\n\nconst StyledPicker = styled.input`\n  padding: 5px 10px;\n`;\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const stock = useSelector(state => state.stock);\n\n  const [selectedStock, setSelectedStock] = useState('apple');\n  const [endDate, setEndDate] = useState(new Date());\n\n  useEffect(() => {\n    dispatch(fetchStockStart(selectedStock));\n  }, [dispatch, selectedStock]);\n\n  console.log(stock);\n\n  if(stock.errorMessage) {\n    return <>{stock.errorMessage}</>;\n  }\n\n  if (!stock.stock) {\n    return <>Loading</>;\n  }\n\n\n  const performance = stock.stock.performance\n    .reduce((acc, current) => {\n      const prevAmount = acc.length > 0 ? acc[acc.length - 1][1] : 10_000;\n      return [\n        ...acc,\n        [new Date(current[0]), prevAmount + (prevAmount * current[1]) / 100],\n      ];\n    }, [])\n    .filter((item) => item[0] < endDate);\n\n  const visibleIndex = parseInt(performance.length / 8);\n\n  const chartData = performance.filter(\n    (item, index) => index % visibleIndex === 0\n  );\n\n  console.log(chartData);\n\n  const options = {\n    title: {\n      text: stock.companyName,\n    },\n    xAxis: {\n      categories: chartData.map((data) => data[0].toDateString()),\n    },\n    series: [\n      {\n        data: chartData,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <div>\n        <HighchartsReact highcharts={Highcharts} options={options} />\n      </div>\n      <div>\n        <StyledSelect\n          name=\"Select stock\"\n          defaultValue=\"apple\"\n          onChange={(e) => setSelectedStock(e.target.value)}\n        >\n          <option value=\"apple\">Apple</option>\n          <option value=\"amazon\">Amazon</option>\n          <option value=\"tesla\">Tesla</option>\n        </StyledSelect>\n        <StyledPicker\n          onChange={(e) => {\n            console.log(e.target.value);\n            setEndDate(new Date(e.target.value));\n          }}\n          type=\"date\"\n          value={formatDate(endDate || performance[performance.length - 1][0])}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}