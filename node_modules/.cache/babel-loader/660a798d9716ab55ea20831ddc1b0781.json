{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { fetchStockFailure, fetchStockSuccess } from \"./stock.actions\";\nimport stocksActionTypes from \"./stock.types\";\nimport apple from \"../../data/apple.json\";\nimport amazon from \"../../data/amazon.json\";\nimport tesla from \"../../data/tesla.json\";\nconst stocks = {\n  apple,\n  amazon,\n  tesla\n};\n\nfunction* sleep(time) {\n  yield new Promise(resolve => setTimeout(resolve, time));\n}\n\nconst fetchStockData = async (stockName = \"\") => {\n  try {} catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport function* fetchStockAsync({\n  payload: {\n    stockName\n  }\n}) {\n  try {\n    const res = yield fetchStockData();\n    console.log(res);\n    yield sleep(1000);\n    const data = stocks[stockName];\n    yield put(fetchStockSuccess(data));\n  } catch (error) {\n    yield put(fetchStockFailure(error.message));\n  }\n}\nexport function* fetchStockStart() {\n  yield takeLatest(stocksActionTypes.FETCH_STOCK_START, fetchStockAsync);\n}\nexport function* stockSagas() {\n  yield all([call(fetchStockStart)]);\n}","map":{"version":3,"sources":["/Users/andrescisneros/Desktop/stock-v2 (1)/src/redux/stock/stock.sagas.js"],"names":["all","call","put","takeLatest","fetchStockFailure","fetchStockSuccess","stocksActionTypes","apple","amazon","tesla","stocks","sleep","time","Promise","resolve","setTimeout","fetchStockData","stockName","error","Error","message","fetchStockAsync","payload","res","console","log","data","fetchStockStart","FETCH_STOCK_START","stockSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,iBAArD;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,MAAMC,MAAM,GAAG;AACdH,EAAAA,KADc;AAEdC,EAAAA,MAFc;AAGdC,EAAAA;AAHc,CAAf;;AAMA,UAAUE,KAAV,CAAgBC,IAAhB,EAAsB;AACrB,QAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,IAAV,CAAnC,CAAN;AACA;;AAED,MAAMI,cAAc,GAAG,OAAOC,SAAS,GAAG,EAAnB,KAA0B;AAChD,MAAI,CACH,CADD,CACE,OAAOC,KAAP,EAAc;AACf,UAAM,IAAIC,KAAJ,CAAUD,KAAK,CAACE,OAAhB,CAAN;AACA;AACD,CALD;;AAOA,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEL,IAAAA;AAAF;AAAX,CAA1B,EAAsD;AAC5D,MAAI;AACH,UAAMM,GAAG,GAAG,MAAMP,cAAc,EAAhC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMe,IAAI,GAAGhB,MAAM,CAACO,SAAD,CAAnB;AACA,UAAMf,GAAG,CAACG,iBAAiB,CAACqB,IAAD,CAAlB,CAAT;AACA,GAND,CAME,OAAOR,KAAP,EAAc;AACf,UAAMhB,GAAG,CAACE,iBAAiB,CAACc,KAAK,CAACE,OAAP,CAAlB,CAAT;AACA;AACD;AAED,OAAO,UAAUO,eAAV,GAA4B;AAClC,QAAMxB,UAAU,CAACG,iBAAiB,CAACsB,iBAAnB,EAAsCP,eAAtC,CAAhB;AACA;AAED,OAAO,UAAUQ,UAAV,GAAuB;AAC7B,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAAC0B,eAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { fetchStockFailure, fetchStockSuccess } from \"./stock.actions\";\nimport stocksActionTypes from \"./stock.types\";\n\nimport apple from \"../../data/apple.json\";\nimport amazon from \"../../data/amazon.json\";\nimport tesla from \"../../data/tesla.json\";\n\nconst stocks = {\n\tapple,\n\tamazon,\n\ttesla,\n};\n\nfunction* sleep(time) {\n\tyield new Promise((resolve) => setTimeout(resolve, time));\n}\n\nconst fetchStockData = async (stockName = \"\") => {\n\ttry {\n\t} catch (error) {\n\t\tthrow new Error(error.message);\n\t}\n};\n\nexport function* fetchStockAsync({ payload: { stockName } }) {\n\ttry {\n\t\tconst res = yield fetchStockData();\n\t\tconsole.log(res);\n\t\tyield sleep(1000);\n\t\tconst data = stocks[stockName];\n\t\tyield put(fetchStockSuccess(data));\n\t} catch (error) {\n\t\tyield put(fetchStockFailure(error.message));\n\t}\n}\n\nexport function* fetchStockStart() {\n\tyield takeLatest(stocksActionTypes.FETCH_STOCK_START, fetchStockAsync);\n}\n\nexport function* stockSagas() {\n\tyield all([call(fetchStockStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}